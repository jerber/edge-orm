{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"EdgeORM \u00b6 Simple, powerful, and fully typed Python ORM for working with graph-relational databases. Query \u00b6 from app.dbs import db user = await db . UserResolver () . friends () . limit ( 10 ) . get ( id = '123' ) for user in users : names_of_friends = \", \" . join ([ f . name for f in await user . friends ()]) print ( f ' { user . name } is friends with { names_of_friends } ' ) Welcome to MkDocs \u00b6 For full documentation visit mkdocs.org . Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"EdgeORM"},{"location":"#edgeorm","text":"Simple, powerful, and fully typed Python ORM for working with graph-relational databases.","title":"EdgeORM"},{"location":"#query","text":"from app.dbs import db user = await db . UserResolver () . friends () . limit ( 10 ) . get ( id = '123' ) for user in users : names_of_friends = \", \" . join ([ f . name for f in await user . friends ()]) print ( f ' { user . name } is friends with { names_of_friends } ' )","title":"Query"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"}]}